apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: influxdb2
  namespace: monitoring
spec:
  interval: 5m0s
  chart:
    spec:
      chart: influxdb2
      version: '>=2.0.1'
      sourceRef:
        kind: HelmRepository
        name: influxdata
        namespace: flux-system
  timeout: 5m0s
  # install:
  #   crds: Create
  # targetNamespace: monitoring
  # upgrade:
  #  crds: CreateReplace
  values:

    nodeSelector:
      kubernetes.io/arch: amd64

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/monitoring
              operator: In
              values:
              - "true"

    securityContext: {}

    ## Extra environment variables to configure influxdb
    ## e.g.
    # env:
    #   - name: FOO
    #     value: BAR
    #   - name: BAZ
    #     valueFrom:
    #       secretKeyRef:
    #         name: my-secret
    #         key: my-key
    env: {}

    ## Create default user through docker entrypoint
    ## Defaults indicated below
    ##
    adminUser:
      organization: "influxdata"
      bucket: "homeassistant"
      user: "admin"
      retention_policy: "0s"
      ## Leave empty to generate a random password and token.
      ## Or fill any of these values to use fixed values.
      password: ""
      token: ""

      ## The password and token are obtained from an existing secret. The expected
      ## keys are `admin-password` and `admin-token`.
      ## If set, the password and token values above are ignored.
      # existingSecret: influxdb-auth

    ## Persist data to a persistent volume
    ##
    persistence:
      enabled: true
      ## If true will use an existing PVC instead of creating one
      # useExisting: false
      ## Name of existing PVC to be used in the influx deployment
      # name:
      ## influxdb data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessMode: ReadWriteOnce
      size: 50Gi
      mountPath: /var/lib/influxdbv2

    service:
      type: ClusterIP
      port: 80
      targetPort: 8086
      annotations: {}
      labels: {}
      portName: http

    ingress:
      enabled: true
      # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
      # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
      ingressClassName: traefik
      tls: true
      secretName: k8s-home-cert
      hostname: influxdb.k8s.home
      annotations:
         #  kubernetes.io/ingress.class: traefik
          traefik.ingress.kubernetes.io/frontend-entry-points: http,https
          traefik.ingress.kubernetes.io/redirect-entry-point: https
          traefik.ingress.kubernetes.io/redirect-permanent: "true"
        # kubernetes.io/ingress.class: "nginx"
        # kubernetes.io/tls-acme: "true"
      path: /

    ## Pod disruption budget configuration
    ##
    pdb:
      ## Specifies whether a Pod disruption budget should be created
      ##
      create: true
      minAvailable: 1
      # maxUnavailable: 1


#  valuesFrom:
#  - kind: Secret
#    name: "influxdb2-helm-values"
#    optional: false
